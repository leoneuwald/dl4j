{"paragraphs":[{"text":"%spark.dep\nz.reset()\nz.load(\"org.nd4j:nd4j-native-platform:0.9.1\")\nz.load(\"org.deeplearning4j:deeplearning4j-core:0.9.1\")\nz.load(\"org.datavec:datavec-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:dl4j-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:deeplearning4j-zoo:0.9.1\")","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@37a9f222\n"}]},"apps":[],"jobName":"paragraph_1567057651023_1129879177","id":"20190813-010616_2021083357","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:403"},{"text":"import scala.collection.JavaConversions._\n\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\n\nimport org.nd4j.linalg.learning.config._ // for different updaters like Adam, Nesterovs, etc.\nimport org.nd4j.linalg.activations.Activation // defines different activation functions like RELU, SOFTMAX, etc.\nimport org.nd4j.linalg.lossfunctions.LossFunctions // mean squared error, multiclass cross entropy, etc.\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n\n","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.collection.JavaConversions._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n"}]},"apps":[],"jobName":"paragraph_1567057651024_1140267397","id":"20190813-010626_1430679682","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:404"},{"text":"val numSamples = 150\nval batchSize = 150","dateUpdated":"2019-08-29T06:03:40+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numberOfLabels: Int = 10\nnumberOfSamples: Int = 50000\nnumberOfTestSamples: Int = 10000\nbatchSizePerWorker: Int = 16\n"}]},"apps":[],"jobName":"paragraph_1567057651024_1140267397","id":"20190828-044726_487790819","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:405"},{"text":"val trainingDataSet = new IrisDataSetIterator(batchSize, numSamples)\nval testDataSet = new IrisDataSetIterator(batchSize, numSamples)\nimport scala.collection.mutable.ListBuffer\n\nvar trainDataList = new ListBuffer[DataSet]()\nwhile (trainingDataSet.hasNext()) {\n  trainDataList += trainingDataSet.next()\n}\n\nval testDataList = new ListBuffer[DataSet]()\nwhile (testDataSet.hasNext()) {\n  testDataList += testDataSet.next()\n}\nval trainData = sc.parallelize(trainDataList)\nval testData = sc.parallelize(testDataList)","dateUpdated":"2019-08-29T06:04:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainingDataSet: org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator = org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator@6bbefb9d\ntestDataSet: org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator = org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator@531c536b\nimport scala.collection.mutable.ListBuffer\ntrainDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntestDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntrainData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[0] at parallelize at <console>:273\ntestData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[1] at parallelize at <console>:273\n"}]},"apps":[],"jobName":"paragraph_1567057651024_1140267397","id":"20190828-044805_1310907596","dateCreated":"2019-08-29T05:47:31+0000","status":"ABORT","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:407","user":"anonymous"},{"text":"//val classesNum = MnistDataSetIterator.numLabels(emnistSet) // total output classes\nval seed = 123 // integer for reproducability of a random number generator\n\nval zooModel = new LeNet(numberOfLabels, seed, 3)","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"seed: Int = 123\nzooModel: org.deeplearning4j.zoo.model.LeNet = org.deeplearning4j.zoo.model.LeNet@7f2ba56d\n"}]},"apps":[],"jobName":"paragraph_1567057651025_1139882649","id":"20190813-014219_2027485131","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:409"},{"text":"import collection.JavaConverters._\nzooModel.setInputShape(Array(Array(3, 32, 32)))","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import collection.JavaConverters._\n"}]},"apps":[],"jobName":"paragraph_1567057651025_1139882649","id":"20190828-024936_683229252","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:410"},{"text":"val tm = new ParameterAveragingTrainingMaster.Builder(batchSizePerWorker)    //Each DataSet object: contains (by default) 32 examples\n  .workerPrefetchNumBatches(0)\n  .saveUpdater(true)\n  .averagingFrequency(5)                            //Do 5 minibatch fit operations per worker, then average and redistribute parameters\n  .batchSizePerWorker(batchSizePerWorker)     //Number of examples that each worker uses per fit operation\n  .build()\n  \nval sparkNet = new SparkDl4jMultiLayer(sc, zooModel.conf(), tm)","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tm: org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster = ParameterAveragingTrainingMaster(saveUpdater=true, numWorkers=null, rddDataSetNumExamples=16, averagingFrequency=5, aggregationDepth=2, prefetchNumBatches=0, iterationCount=0, trainingHookList=null)\nsparkNet: org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer = org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer@21282cc5\n"}]},"apps":[],"jobName":"paragraph_1567057651025_1139882649","id":"20190819-011525_331240530","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:411"},{"text":"val numEpochs = 2\nfor (i <- 0 to numEpochs) {\n  val trained = sparkNet.fit(trainData)\n}","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567057651025_1139882649","id":"20190813-015330_1330142053","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:412"},{"text":"val resultado = sparkNet.doEvaluation(testData, 64, new Evaluation(10))(0)","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"resultado: org.deeplearning4j.eval.Evaluation =\n\nExamples labeled as 0 classified by model as 0: 5868 times\nExamples labeled as 0 classified by model as 1: 1 times\nExamples labeled as 0 classified by model as 2: 8 times\nExamples labeled as 0 classified by model as 3: 2 times\nExamples labeled as 0 classified by model as 4: 2 times\nExamples labeled as 0 classified by model as 5: 8 times\nExamples labeled as 0 classified by model as 6: 14 times\nExamples labeled as 0 classified by model as 7: 1 times\nExamples labeled as 0 classified by model as 8: 7 times\nExamples labeled as 0 classified by model as 9: 12 times\nExamples labeled as 1 classified by model as 0: 1 times\nExamples labeled as 1 classified by model as 1: 6588 times\nExamples labeled as 1 classified by model as 2: 49 times\nExamples la..."}]},"apps":[],"jobName":"paragraph_1567057651025_1139882649","id":"20190813-021401_2110373941","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:413"},{"text":"println(resultado)","dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nExamples labeled as 0 classified by model as 0: 5868 times\nExamples labeled as 0 classified by model as 1: 1 times\nExamples labeled as 0 classified by model as 2: 8 times\nExamples labeled as 0 classified by model as 3: 2 times\nExamples labeled as 0 classified by model as 4: 2 times\nExamples labeled as 0 classified by model as 5: 8 times\nExamples labeled as 0 classified by model as 6: 14 times\nExamples labeled as 0 classified by model as 7: 1 times\nExamples labeled as 0 classified by model as 8: 7 times\nExamples labeled as 0 classified by model as 9: 12 times\nExamples labeled as 1 classified by model as 0: 1 times\nExamples labeled as 1 classified by model as 1: 6588 times\nExamples labeled as 1 classified by model as 2: 49 times\nExamples labeled as 1 classified by model as 3: 15 times\nExamples labeled as 1 classified by model as 4: 26 times\nExamples labeled as 1 classified by model as 6: 5 times\nExamples labeled as 1 classified by model as 7: 19 times\nExamples labeled as 1 classified by model as 8: 33 times\nExamples labeled as 1 classified by model as 9: 6 times\nExamples labeled as 2 classified by model as 0: 9 times\nExamples labeled as 2 classified by model as 1: 4 times\nExamples labeled as 2 classified by model as 2: 5835 times\nExamples labeled as 2 classified by model as 3: 24 times\nExamples labeled as 2 classified by model as 4: 7 times\nExamples labeled as 2 classified by model as 6: 2 times\nExamples labeled as 2 classified by model as 7: 34 times\nExamples labeled as 2 classified by model as 8: 30 times\nExamples labeled as 2 classified by model as 9: 13 times\nExamples labeled as 3 classified by model as 0: 6 times\nExamples labeled as 3 classified by model as 1: 1 times\nExamples labeled as 3 classified by model as 2: 28 times\nExamples labeled as 3 classified by model as 3: 5985 times\nExamples labeled as 3 classified by model as 4: 1 times\nExamples labeled as 3 classified by model as 5: 35 times\nExamples labeled as 3 classified by model as 7: 17 times\nExamples labeled as 3 classified by model as 8: 22 times\nExamples labeled as 3 classified by model as 9: 36 times\nExamples labeled as 4 classified by model as 0: 2 times\nExamples labeled as 4 classified by model as 1: 3 times\nExamples labeled as 4 classified by model as 2: 8 times\nExamples labeled as 4 classified by model as 4: 5733 times\nExamples labeled as 4 classified by model as 6: 15 times\nExamples labeled as 4 classified by model as 7: 7 times\nExamples labeled as 4 classified by model as 8: 4 times\nExamples labeled as 4 classified by model as 9: 70 times\nExamples labeled as 5 classified by model as 0: 5 times\nExamples labeled as 5 classified by model as 1: 1 times\nExamples labeled as 5 classified by model as 2: 5 times\nExamples labeled as 5 classified by model as 3: 22 times\nExamples labeled as 5 classified by model as 4: 5 times\nExamples labeled as 5 classified by model as 5: 5331 times\nExamples labeled as 5 classified by model as 6: 14 times\nExamples labeled as 5 classified by model as 7: 4 times\nExamples labeled as 5 classified by model as 8: 14 times\nExamples labeled as 5 classified by model as 9: 20 times\nExamples labeled as 6 classified by model as 0: 12 times\nExamples labeled as 6 classified by model as 1: 5 times\nExamples labeled as 6 classified by model as 3: 1 times\nExamples labeled as 6 classified by model as 4: 6 times\nExamples labeled as 6 classified by model as 5: 26 times\nExamples labeled as 6 classified by model as 6: 5855 times\nExamples labeled as 6 classified by model as 8: 12 times\nExamples labeled as 6 classified by model as 9: 1 times\nExamples labeled as 7 classified by model as 0: 3 times\nExamples labeled as 7 classified by model as 1: 4 times\nExamples labeled as 7 classified by model as 2: 22 times\nExamples labeled as 7 classified by model as 3: 8 times\nExamples labeled as 7 classified by model as 4: 14 times\nExamples labeled as 7 classified by model as 5: 1 times\nExamples labeled as 7 classified by model as 7: 6169 times\nExamples labeled as 7 classified by model as 8: 6 times\nExamples labeled as 7 classified by model as 9: 38 times\nExamples labeled as 8 classified by model as 0: 11 times\nExamples labeled as 8 classified by model as 1: 16 times\nExamples labeled as 8 classified by model as 2: 27 times\nExamples labeled as 8 classified by model as 3: 36 times\nExamples labeled as 8 classified by model as 4: 22 times\nExamples labeled as 8 classified by model as 5: 37 times\nExamples labeled as 8 classified by model as 6: 14 times\nExamples labeled as 8 classified by model as 7: 8 times\nExamples labeled as 8 classified by model as 8: 5617 times\nExamples labeled as 8 classified by model as 9: 63 times\nExamples labeled as 9 classified by model as 0: 6 times\nExamples labeled as 9 classified by model as 1: 2 times\nExamples labeled as 9 classified by model as 3: 25 times\nExamples labeled as 9 classified by model as 4: 19 times\nExamples labeled as 9 classified by model as 5: 14 times\nExamples labeled as 9 classified by model as 6: 2 times\nExamples labeled as 9 classified by model as 7: 42 times\nExamples labeled as 9 classified by model as 8: 5 times\nExamples labeled as 9 classified by model as 9: 5834 times\n\n\n==========================Scores========================================\n # of classes:    10\n Accuracy:        0.9802\n Precision:       0.9801\n Recall:          0.9803\n F1 Score:        0.9802\nPrecision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)\n========================================================================\n"}]},"apps":[],"jobName":"paragraph_1567057651026_1141036895","id":"20190828-032002_1964617380","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:414"},{"dateUpdated":"2019-08-29T05:47:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567057651026_1141036895","id":"20190828-032119_912714771","dateCreated":"2019-08-29T05:47:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:415"}],"name":"LeNet - Iris","id":"2EPE1WYUA","angularObjects":{"2EMEK7VUM:shared_process":[],"2EPE8T2P4:shared_process":[],"2EP8J6V8B:shared_process":[],"2EJTVPNGW:shared_process":[],"2EKZ5MUY8:shared_process":[],"2EJMGXHDC:shared_process":[],"2ENESSFH2:shared_process":[],"2EMEEVCDS:shared_process":[],"2EJS3R1EF:shared_process":[],"2EJPMY3R8:shared_process":[],"2EJXTRMK5:shared_process":[],"2EK3ZXPMR:shared_process":[],"2EJRF8AP4:shared_process":[],"2ENJKD5RW:shared_process":[],"2EJWMB84A:shared_process":[],"2EKDSAUPF:shared_process":[],"2EM1EHM63:shared_process":[],"2EK3NF67M:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}