{"paragraphs":[{"text":"%spark.dep\nz.reset()\nz.load(\"org.nd4j:nd4j-native-platform:0.9.1\")\nz.load(\"org.deeplearning4j:deeplearning4j-core:0.9.1\")\nz.load(\"org.datavec:datavec-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:dl4j-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:deeplearning4j-zoo:0.9.1\")","dateUpdated":"2019-09-01T01:12:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@1dbbc6b6\n"}]},"apps":[],"jobName":"paragraph_1567300091926_-1980566273","id":"20190813-010616_2021083357","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:272","user":"anonymous","dateFinished":"2019-09-01T01:13:23+0000","dateStarted":"2019-09-01T01:12:59+0000"},{"text":"import scala.collection.JavaConversions._\n\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\n\nimport org.nd4j.linalg.learning.config._ // for different updaters like Adam, Nesterovs, etc.\nimport org.nd4j.linalg.activations.Activation // defines different activation functions like RELU, SOFTMAX, etc.\nimport org.nd4j.linalg.lossfunctions.LossFunctions // mean squared error, multiclass cross entropy, etc.\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n\n","dateUpdated":"2019-09-01T01:12:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.collection.JavaConversions._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n"}]},"apps":[],"jobName":"paragraph_1567300091935_-1984029013","id":"20190813-010626_1430679682","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:273","user":"anonymous","dateFinished":"2019-09-01T01:13:49+0000","dateStarted":"2019-09-01T01:13:01+0000"},{"text":"import org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator\n\nval emnistSet = EmnistDataSetIterator.Set.LETTERS\n\nval numberOfLabels = EmnistDataSetIterator.numLabels(emnistSet)\n\nval batchSize = 500 // how many examples to simultaneously train in the network\n\nval emnistTrain = new EmnistDataSetIterator(emnistSet, batchSize, true)\nval emnistTest = new EmnistDataSetIterator(emnistSet, batchSize, false)\n\n\nimport scala.collection.mutable.ListBuffer\n\nvar trainDataList = new ListBuffer[DataSet]()\nwhile (emnistTrain.hasNext()) {\n  trainDataList += emnistTrain.next()\n}\n\nval testDataList = new ListBuffer[DataSet]()\nwhile (emnistTest.hasNext()) {\n  testDataList += emnistTest.next()\n}\nval trainData = sc.parallelize(trainDataList)\nval testData = sc.parallelize(testDataList)","dateUpdated":"2019-09-01T01:17:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator\nemnistSet: org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator.Set = LETTERS\nnumberOfLabels: Int = 26\nbatchSize: Int = 500\nemnistTrain: org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator = org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator@2a3d4f33\nemnistTest: org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator = org.deeplearning4j.datasets.iterator.impl.EmnistDataSetIterator@46f00fda\nimport scala.collection.mutable.ListBuffer\ntrainDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntestDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntrainData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[21] at parallelize at <console>:101\ntestData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[22] at parallelize at <console>:101\n"}]},"apps":[],"jobName":"paragraph_1567300091935_-1984029013","id":"20190828-044805_1310907596","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:274","user":"anonymous","dateFinished":"2019-09-01T01:17:08+0000","dateStarted":"2019-09-01T01:17:02+0000"},{"text":"val seed = 123 // integer for reproducability of a random number generator\n\nval zooModel = new LeNet(numberOfLabels, seed, 3)","dateUpdated":"2019-09-01T01:17:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"seed: Int = 123\nzooModel: org.deeplearning4j.zoo.model.LeNet = org.deeplearning4j.zoo.model.LeNet@50d7b0ea\n"}]},"apps":[],"jobName":"paragraph_1567300091936_-1998264723","id":"20190813-014219_2027485131","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:275","user":"anonymous","dateFinished":"2019-09-01T01:17:19+0000","dateStarted":"2019-09-01T01:17:18+0000"},{"text":"import collection.JavaConverters._\nzooModel.setInputShape(Array(Array(1, 28, 28)))","dateUpdated":"2019-09-01T01:17:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import collection.JavaConverters._\n"}]},"apps":[],"jobName":"paragraph_1567300091936_-1998264723","id":"20190828-024936_683229252","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:276","user":"anonymous","dateFinished":"2019-09-01T01:17:23+0000","dateStarted":"2019-09-01T01:17:21+0000"},{"text":"val tm = new ParameterAveragingTrainingMaster.Builder(batchSize)    //Each DataSet object: contains (by default) 32 examples\n  .workerPrefetchNumBatches(0)\n  .saveUpdater(true)\n  .averagingFrequency(5)                            //Do 5 minibatch fit operations per worker, then average and redistribute parameters\n  .batchSizePerWorker(batchSize)     //Number of examples that each worker uses per fit operation\n  .build()\n  \nval sparkNet = new SparkDl4jMultiLayer(sc, zooModel.conf(), tm)","dateUpdated":"2019-09-01T01:17:23+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tm: org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster = ParameterAveragingTrainingMaster(saveUpdater=true, numWorkers=null, rddDataSetNumExamples=500, averagingFrequency=5, aggregationDepth=2, prefetchNumBatches=0, iterationCount=0, trainingHookList=null)\nsparkNet: org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer = org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer@1e5de7b3\n"}]},"apps":[],"jobName":"paragraph_1567300091937_-1998649472","id":"20190819-011525_331240530","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:277","user":"anonymous","dateFinished":"2019-09-01T01:17:24+0000","dateStarted":"2019-09-01T01:17:23+0000"},{"text":"val numEpochs = 2\nfor (i <- 0 to numEpochs) {\n  println(numEpochs)\n  val trained = sparkNet.fit(trainData)\n}","dateUpdated":"2019-09-01T01:42:14+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numEpochs: Int = 2\n2\n2\n2\n"}]},"apps":[],"jobName":"paragraph_1567300091937_-1998649472","id":"20190813-015330_1330142053","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:278","user":"anonymous","dateFinished":"2019-09-01T02:03:40+0000","dateStarted":"2019-09-01T01:42:14+0000"},{"text":"val resultado = sparkNet.doEvaluation(testData, 64, new Evaluation(10))(0)","dateUpdated":"2019-09-01T01:42:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"resultado: org.deeplearning4j.eval.Evaluation =\n\nExamples labeled as 0 classified by model as 0: 554 times\nExamples labeled as 0 classified by model as 1: 6 times\nExamples labeled as 0 classified by model as 2: 2 times\nExamples labeled as 0 classified by model as 3: 22 times\nExamples labeled as 0 classified by model as 4: 12 times\nExamples labeled as 0 classified by model as 5: 9 times\nExamples labeled as 0 classified by model as 6: 19 times\nExamples labeled as 0 classified by model as 7: 42 times\nExamples labeled as 0 classified by model as 8: 1 times\nExamples labeled as 0 classified by model as 9: 1 times\nExamples labeled as 1 classified by model as 0: 7 times\nExamples labeled as 1 classified by model as 1: 666 times\nExamples labeled as 1 classified by model as 3: 17 times\nExamples la..."}]},"apps":[],"jobName":"paragraph_1567300091938_-1997495225","id":"20190813-021401_2110373941","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:279","user":"anonymous","dateFinished":"2019-09-01T02:03:50+0000","dateStarted":"2019-09-01T01:42:16+0000"},{"text":"println(resultado)","dateUpdated":"2019-09-01T01:42:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nExamples labeled as 0 classified by model as 0: 554 times\nExamples labeled as 0 classified by model as 1: 6 times\nExamples labeled as 0 classified by model as 2: 2 times\nExamples labeled as 0 classified by model as 3: 22 times\nExamples labeled as 0 classified by model as 4: 12 times\nExamples labeled as 0 classified by model as 5: 9 times\nExamples labeled as 0 classified by model as 6: 19 times\nExamples labeled as 0 classified by model as 7: 42 times\nExamples labeled as 0 classified by model as 8: 1 times\nExamples labeled as 0 classified by model as 9: 1 times\nExamples labeled as 1 classified by model as 0: 7 times\nExamples labeled as 1 classified by model as 1: 666 times\nExamples labeled as 1 classified by model as 3: 17 times\nExamples labeled as 1 classified by model as 4: 15 times\nExamples labeled as 1 classified by model as 6: 21 times\nExamples labeled as 1 classified by model as 7: 26 times\nExamples labeled as 1 classified by model as 8: 7 times\nExamples labeled as 1 classified by model as 9: 3 times\nExamples labeled as 2 classified by model as 0: 10 times\nExamples labeled as 2 classified by model as 2: 679 times\nExamples labeled as 2 classified by model as 3: 3 times\nExamples labeled as 2 classified by model as 4: 41 times\nExamples labeled as 2 classified by model as 5: 2 times\nExamples labeled as 2 classified by model as 6: 10 times\nExamples labeled as 2 classified by model as 8: 5 times\nExamples labeled as 2 classified by model as 9: 3 times\nExamples labeled as 3 classified by model as 0: 22 times\nExamples labeled as 3 classified by model as 1: 27 times\nExamples labeled as 3 classified by model as 2: 2 times\nExamples labeled as 3 classified by model as 3: 600 times\nExamples labeled as 3 classified by model as 4: 1 times\nExamples labeled as 3 classified by model as 6: 5 times\nExamples labeled as 3 classified by model as 7: 12 times\nExamples labeled as 3 classified by model as 8: 3 times\nExamples labeled as 3 classified by model as 9: 8 times\nExamples labeled as 4 classified by model as 0: 14 times\nExamples labeled as 4 classified by model as 1: 9 times\nExamples labeled as 4 classified by model as 2: 40 times\nExamples labeled as 4 classified by model as 4: 678 times\nExamples labeled as 4 classified by model as 5: 5 times\nExamples labeled as 4 classified by model as 6: 7 times\nExamples labeled as 4 classified by model as 8: 2 times\nExamples labeled as 5 classified by model as 0: 3 times\nExamples labeled as 5 classified by model as 2: 3 times\nExamples labeled as 5 classified by model as 4: 4 times\nExamples labeled as 5 classified by model as 5: 661 times\nExamples labeled as 5 classified by model as 6: 6 times\nExamples labeled as 5 classified by model as 8: 5 times\nExamples labeled as 5 classified by model as 9: 5 times\nExamples labeled as 6 classified by model as 0: 27 times\nExamples labeled as 6 classified by model as 1: 27 times\nExamples labeled as 6 classified by model as 2: 12 times\nExamples labeled as 6 classified by model as 3: 2 times\nExamples labeled as 6 classified by model as 4: 9 times\nExamples labeled as 6 classified by model as 5: 10 times\nExamples labeled as 6 classified by model as 6: 478 times\nExamples labeled as 6 classified by model as 7: 1 times\nExamples labeled as 6 classified by model as 9: 17 times\nExamples labeled as 7 classified by model as 0: 13 times\nExamples labeled as 7 classified by model as 1: 6 times\nExamples labeled as 7 classified by model as 3: 17 times\nExamples labeled as 7 classified by model as 5: 1 times\nExamples labeled as 7 classified by model as 6: 3 times\nExamples labeled as 7 classified by model as 7: 608 times\nExamples labeled as 7 classified by model as 8: 14 times\nExamples labeled as 8 classified by model as 1: 1 times\nExamples labeled as 8 classified by model as 3: 2 times\nExamples labeled as 8 classified by model as 4: 1 times\nExamples labeled as 8 classified by model as 5: 5 times\nExamples labeled as 8 classified by model as 6: 1 times\nExamples labeled as 8 classified by model as 7: 2 times\nExamples labeled as 8 classified by model as 8: 549 times\nExamples labeled as 8 classified by model as 9: 23 times\nExamples labeled as 9 classified by model as 0: 1 times\nExamples labeled as 9 classified by model as 1: 2 times\nExamples labeled as 9 classified by model as 3: 26 times\nExamples labeled as 9 classified by model as 4: 1 times\nExamples labeled as 9 classified by model as 6: 7 times\nExamples labeled as 9 classified by model as 7: 3 times\nExamples labeled as 9 classified by model as 8: 28 times\nExamples labeled as 9 classified by model as 9: 681 times\n\n\n==========================Scores========================================\n # of classes:    10\n Accuracy:        0.4158\n Precision:       0.8076\n Recall:          0.7693\n F1 Score:        0.7874\nPrecision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)\n========================================================================\n"}]},"apps":[],"jobName":"paragraph_1567300091938_-1997495225","id":"20190828-032002_1964617380","dateCreated":"2019-09-01T01:08:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:280","user":"anonymous","dateFinished":"2019-09-01T02:03:50+0000","dateStarted":"2019-09-01T02:03:41+0000"},{"dateUpdated":"2019-09-01T01:08:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567300091939_-1997879974","id":"20190828-032119_912714771","dateCreated":"2019-09-01T01:08:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:281"}],"name":"LeNet - EmnistComplete","id":"2EJSB535Q","angularObjects":{"2EMFDCFCW:shared_process":[],"2ENRPW8TC:shared_process":[],"2ENRWMA4R:shared_process":[],"2EKQBPN6H:shared_process":[],"2ENSKNF5C:shared_process":[],"2EPEVTCTY:shared_process":[],"2EMQ86TJ6:shared_process":[],"2EKCKG4BC:shared_process":[],"2EMT1DUEK:shared_process":[],"2EN2SE7WN:shared_process":[],"2ENUXCTA1:shared_process":[],"2EKY83YA6:shared_process":[],"2EMZKCCVT:shared_process":[],"2EKCDUCE3:shared_process":[],"2EKGPUJ3Q:shared_process":[],"2EJTVD9M2:shared_process":[],"2EJWTTNTH:shared_process":[],"2EPD2QVC7:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}