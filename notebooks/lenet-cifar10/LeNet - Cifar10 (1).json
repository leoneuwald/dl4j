{"paragraphs":[{"text":"%spark.dep\nz.reset()\nz.load(\"org.nd4j:nd4j-native-platform:0.9.1\")\nz.load(\"org.deeplearning4j:deeplearning4j-core:0.9.1\")\nz.load(\"org.datavec:datavec-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:dl4j-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:deeplearning4j-zoo:0.9.1\")","user":"anonymous","dateUpdated":"2019-08-29T06:03:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@1e745cff\n"}]},"apps":[],"jobName":"paragraph_1567056808399_1118322507","id":"20190813-010616_2021083357","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:10+0000","dateFinished":"2019-08-29T06:03:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4227"},{"text":"import scala.collection.JavaConversions._\n\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\n\nimport org.nd4j.linalg.learning.config._ // for different updaters like Adam, Nesterovs, etc.\nimport org.nd4j.linalg.activations.Activation // defines different activation functions like RELU, SOFTMAX, etc.\nimport org.nd4j.linalg.lossfunctions.LossFunctions // mean squared error, multiclass cross entropy, etc.\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n\n","user":"anonymous","dateUpdated":"2019-08-29T06:03:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.collection.JavaConversions._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.datavec.image.loader.CifarLoader\nimport org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator\n"}]},"apps":[],"jobName":"paragraph_1567056808400_1128710727","id":"20190813-010626_1430679682","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:11+0000","dateFinished":"2019-08-29T06:03:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4228"},{"text":"val numberOfLabels = CifarLoader.NUM_LABELS\nval numberOfSamples = CifarLoader.NUM_TRAIN_IMAGES\nval numberOfTestSamples = CifarLoader.NUM_TEST_IMAGES\nval batchSizePerWorker = 16","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numberOfLabels: Int = 10\nnumberOfSamples: Int = 50000\nnumberOfTestSamples: Int = 10000\nbatchSizePerWorker: Int = 16\n"}]},"apps":[],"jobName":"paragraph_1567056808400_1128710727","id":"20190828-044726_487790819","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:21+0000","dateFinished":"2019-08-29T06:03:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4229"},{"text":"import org.datavec.image.loader.BaseImageLoader\nimport collection.JavaConverters._\nimport java.io.File\n\nval states = Map(\"filesFilename\" -> \"cifar-10-binary.tar.gz\", \"filesURL\" -> \"https://storage.googleapis.com/ufrgsneuwald/~kriz/cifar-10-binary.tar.gz\", \"filesFilenameUnzipped\" -> \"cifar-10-batches-bin\")\n\nnew File(new File(System.getProperty(\"user.home\")), \"cifar\")\nstates\nBaseImageLoader.downloadAndUntar(states, new File(new File(System.getProperty(\"user.home\")), \"cifar\"))","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.datavec.image.loader.BaseImageLoader\nimport collection.JavaConverters._\nimport java.io.File\nstates: scala.collection.immutable.Map[String,String] = Map(filesFilename -> cifar-10-binary.tar.gz, filesURL -> https://storage.googleapis.com/ufrgsneuwald/~kriz/cifar-10-binary.tar.gz, filesFilenameUnzipped -> cifar-10-batches-bin)\nres5: java.io.File = /var/lib/zeppelin/cifar\nres6: scala.collection.immutable.Map[String,String] = Map(filesFilename -> cifar-10-binary.tar.gz, filesURL -> https://storage.googleapis.com/ufrgsneuwald/~kriz/cifar-10-binary.tar.gz, filesFilenameUnzipped -> cifar-10-batches-bin)\n"}]},"apps":[],"jobName":"paragraph_1567056808401_1128325978","id":"20190828-053243_1540319826","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:47+0000","dateFinished":"2019-08-29T06:03:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4230"},{"text":"val trainingDataSet = new CifarDataSetIterator(batchSizePerWorker, numberOfSamples, true)\nval testDataSet = new CifarDataSetIterator(batchSizePerWorker, numberOfTestSamples, false)\nimport scala.collection.mutable.ListBuffer\n\nvar trainDataList = new ListBuffer[DataSet]()\nwhile (trainingDataSet.hasNext()) {\n  trainDataList += trainingDataSet.next()\n}\n\nval testDataList = new ListBuffer[DataSet]()\nwhile (testDataSet.hasNext()) {\n  testDataList += testDataSet.next()\n}\nval trainData = sc.parallelize(trainDataList)\nval testData = sc.parallelize(testDataList)","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainingDataSet: org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator = org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator@1cb01db3\ntestDataSet: org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator = org.deeplearning4j.datasets.iterator.impl.CifarDataSetIterator@35a77a6e\nimport scala.collection.mutable.ListBuffer\ntrainDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntestDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntrainData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[0] at parallelize at <console>:100\ntestData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[1] at parallelize at <console>:100\n"}]},"apps":[],"jobName":"paragraph_1567056808401_1128325978","id":"20190828-044805_1310907596","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:48+0000","dateFinished":"2019-08-29T06:04:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4231"},{"text":"val seed = 123 // integer for reproducability of a random number generator\nval zooModel = new LeNet(numberOfLabels, seed, 3)","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"seed: Int = 123\nzooModel: org.deeplearning4j.zoo.model.LeNet = org.deeplearning4j.zoo.model.LeNet@716a1242\n"}]},"apps":[],"jobName":"paragraph_1567056808402_1129480225","id":"20190813-014219_2027485131","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:03:55+0000","dateFinished":"2019-08-29T06:04:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4232"},{"text":"import collection.JavaConverters._\nzooModel.setInputShape(Array(Array(3, 32, 32)))","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import collection.JavaConverters._\n"}]},"apps":[],"jobName":"paragraph_1567056808402_1129480225","id":"20190828-024936_683229252","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:04:14+0000","dateFinished":"2019-08-29T06:04:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4233"},{"text":"val tm = new ParameterAveragingTrainingMaster.Builder(batchSizePerWorker)    //Each DataSet object: contains (by default) 32 examples\n  .workerPrefetchNumBatches(0)\n  .saveUpdater(true)\n  .averagingFrequency(5)                            //Do 5 minibatch fit operations per worker, then average and redistribute parameters\n  .batchSizePerWorker(batchSizePerWorker)     //Number of examples that each worker uses per fit operation\n  .build()\n  \nval sparkNet = new SparkDl4jMultiLayer(sc, zooModel.conf(), tm)","user":"anonymous","dateUpdated":"2019-08-29T06:03:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tm: org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster = ParameterAveragingTrainingMaster(saveUpdater=true, numWorkers=null, rddDataSetNumExamples=16, averagingFrequency=5, aggregationDepth=2, prefetchNumBatches=0, iterationCount=0, trainingHookList=null)\nsparkNet: org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer = org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer@5faa8c41\n"}]},"apps":[],"jobName":"paragraph_1567056808402_1129480225","id":"20190819-011525_331240530","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:04:15+0000","dateFinished":"2019-08-29T06:04:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4234"},{"text":"val numEpochs = 2\nfor (i <- 0 to numEpochs) {\n  val trained = sparkNet.fit(trainData)\n}","user":"anonymous","dateUpdated":"2019-08-29T06:03:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"msg":[{"data":"","type":"TEXT"}]},"apps":[],"jobName":"paragraph_1567056808403_1129095476","id":"20190813-015330_1330142053","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:04:17+0000","dateFinished":"2019-08-29T06:00:27+0000","status":"RUNNING","progressUpdateIntervalMs":500,"$$hashKey":"object:4235","errorMessage":""},{"text":"val resultado = sparkNet.doEvaluation(testData, 64, new Evaluation(10))(0)","user":"anonymous","dateUpdated":"2019-08-29T06:03:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567056808403_1129095476","id":"20190813-021401_2110373941","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:04:29+0000","dateFinished":"2019-08-29T06:00:32+0000","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:4236","errorMessage":""},{"text":"println(resultado)","user":"anonymous","dateUpdated":"2019-08-29T06:03:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:101: error: not found: value resultado\n       println(resultado)\n               ^\n"}]},"apps":[],"jobName":"paragraph_1567056808403_1129095476","id":"20190828-032002_1964617380","dateCreated":"2019-08-29T05:33:28+0000","dateStarted":"2019-08-29T06:00:27+0000","dateFinished":"2019-08-29T06:00:32+0000","status":"PENDING","progressUpdateIntervalMs":500,"$$hashKey":"object:4237"},{"user":"anonymous","dateUpdated":"2019-08-29T05:58:14+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567056808404_1127171732","id":"20190828-032119_912714771","dateCreated":"2019-08-29T05:33:28+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4238"}],"name":"LeNet - Cifar10","id":"2EK3M4G1A","angularObjects":{"2EMEK7VUM:shared_process":[],"2EPE8T2P4:shared_process":[],"2EP8J6V8B:shared_process":[],"2EJTVPNGW:shared_process":[],"2EKZ5MUY8:shared_process":[],"2EJMGXHDC:shared_process":[],"2ENESSFH2:shared_process":[],"2EMEEVCDS:shared_process":[],"2EJS3R1EF:shared_process":[],"2EJPMY3R8:shared_process":[],"2EJXTRMK5:shared_process":[],"2EK3ZXPMR:shared_process":[],"2EJRF8AP4:shared_process":[],"2ENJKD5RW:shared_process":[],"2EJWMB84A:shared_process":[],"2EKDSAUPF:shared_process":[],"2EM1EHM63:shared_process":[],"2EK3NF67M:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}