{"paragraphs":[{"text":"%spark.dep\nz.reset()\nz.load(\"org.nd4j:nd4j-native-platform:0.9.1\")\nz.load(\"org.deeplearning4j:deeplearning4j-core:0.9.1\")\nz.load(\"org.datavec:datavec-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:dl4j-spark_2.11:0.9.1_spark_2\")\nz.load(\"org.deeplearning4j:deeplearning4j-zoo:0.9.1\")","user":"anonymous","dateUpdated":"2019-08-29T05:39:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@39569caf\n"}]},"apps":[],"jobName":"paragraph_1567056431520_-2127923268","id":"20190813-010616_2021083357","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:39:19+0000","dateFinished":"2019-08-29T05:39:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6621"},{"text":"import scala.collection.JavaConversions._\n\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\n\nimport org.nd4j.linalg.learning.config._ // for different updaters like Adam, Nesterovs, etc.\nimport org.nd4j.linalg.activations.Activation // defines different activation functions like RELU, SOFTMAX, etc.\nimport org.nd4j.linalg.lossfunctions.LossFunctions // mean squared error, multiclass cross entropy, etc.\n\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions","user":"anonymous","dateUpdated":"2019-08-29T05:39:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.collection.JavaConversions._\nimport org.deeplearning4j.datasets.iterator._\nimport org.deeplearning4j.datasets.iterator.impl._\nimport org.deeplearning4j.nn.api._\nimport org.deeplearning4j.nn.multilayer._\nimport org.deeplearning4j.nn.graph._\nimport org.deeplearning4j.nn.conf._\nimport org.deeplearning4j.nn.conf.inputs._\nimport org.deeplearning4j.nn.conf.layers._\nimport org.deeplearning4j.nn.weights._\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.deeplearning4j.optimize.listeners._\nimport org.deeplearning4j.datasets.datavec.RecordReaderMultiDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.zoo.model.LeNet\nimport org.nd4j.linalg.learning.config._\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.lossfunctions.LossFunctions\nimport org.apache.spark.SparkConf\nimport org.apache.spark.api.java.JavaRDD\nimport org.apache.spark.api.java.JavaSparkContext\nimport org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator\nimport org.deeplearning4j.eval.Evaluation\nimport org.deeplearning4j.nn.api.OptimizationAlgorithm\nimport org.deeplearning4j.nn.conf.MultiLayerConfiguration\nimport org.deeplearning4j.nn.conf.NeuralNetConfiguration\nimport org.deeplearning4j.nn.conf.Updater\nimport org.deeplearning4j.nn.conf.layers.DenseLayer\nimport org.deeplearning4j.nn.conf.layers.OutputLayer\nimport org.deeplearning4j.nn.weights.WeightInit\nimport org.deeplearning4j.spark.api.TrainingMaster\nimport org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer\nimport org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster\nimport org.nd4j.linalg.activations.Activation\nimport org.nd4j.linalg.dataset.DataSet\nimport org.nd4j.linalg.dataset.api.iterator.DataSetIterator\nimport org.nd4j.linalg.lossfunctions.LossFunctions\n"}]},"apps":[],"jobName":"paragraph_1567056431530_-2130231761","id":"20190813-010626_1430679682","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:39:21+0000","dateFinished":"2019-08-29T05:39:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6622"},{"text":"val batchSizePerWorker = 16\nval iterTrain = new MnistDataSetIterator(batchSizePerWorker, true, 12345)\nval iterTest = new MnistDataSetIterator(batchSizePerWorker, false, 12345)\n\nimport scala.collection.mutable.ListBuffer\nvar trainDataList = new ListBuffer[DataSet]()\nwhile (iterTrain.hasNext()) {\n  trainDataList += iterTrain.next()\n}\n\nval testDataList = new ListBuffer[DataSet]()\nwhile (iterTest.hasNext()) {\n  testDataList += iterTest.next()\n}\n\nval trainData = sc.parallelize(trainDataList)\nval testData = sc.parallelize(testDataList)","user":"anonymous","dateUpdated":"2019-08-29T05:39:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"batchSizePerWorker: Int = 16\niterTrain: org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator = org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator@11e2cb23\niterTest: org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator = org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator@2b0e77ff\nimport scala.collection.mutable.ListBuffer\ntrainDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntestDataList: scala.collection.mutable.ListBuffer[org.nd4j.linalg.dataset.DataSet] = ListBuffer()\ntrainData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[0] at parallelize at <console>:94\ntestData: org.apache.spark.rdd.RDD[org.nd4j.linalg.dataset.DataSet] = ParallelCollectionRDD[1] at parallelize at <console>:93\n"}]},"apps":[],"jobName":"paragraph_1567056431531_-2130616510","id":"20190813-013450_461185789","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:39:30+0000","dateFinished":"2019-08-29T05:40:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6623"},{"text":"val seed = 123 // integer for reproducability of a random number generator\n\nval zooModel = new LeNet(10, seed, 3)","user":"anonymous","dateUpdated":"2019-08-29T05:39:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"seed: Int = 123\nzooModel: org.deeplearning4j.zoo.model.LeNet = org.deeplearning4j.zoo.model.LeNet@cf0de6d\n"}]},"apps":[],"jobName":"paragraph_1567056431532_-2132540255","id":"20190813-014219_2027485131","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:39:55+0000","dateFinished":"2019-08-29T05:40:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6624"},{"text":"import collection.JavaConverters._\nzooModel.setInputShape(Array(Array(1, 28, 28)))","user":"anonymous","dateUpdated":"2019-08-29T05:39:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import collection.JavaConverters._\n"}]},"apps":[],"jobName":"paragraph_1567056431532_-2132540255","id":"20190828-024936_683229252","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:40:03+0000","dateFinished":"2019-08-29T05:40:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6625"},{"text":"val tm = new ParameterAveragingTrainingMaster.Builder(batchSizePerWorker)    //Each DataSet object: contains (by default) 32 examples\n  .workerPrefetchNumBatches(0)\n  .saveUpdater(true)\n  .averagingFrequency(5)                            //Do 5 minibatch fit operations per worker, then average and redistribute parameters\n  .batchSizePerWorker(batchSizePerWorker)     //Number of examples that each worker uses per fit operation\n  .build()\n  \nval sparkNet = new SparkDl4jMultiLayer(sc, zooModel.conf(), tm)","user":"anonymous","dateUpdated":"2019-08-29T05:39:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"tm: org.deeplearning4j.spark.impl.paramavg.ParameterAveragingTrainingMaster = ParameterAveragingTrainingMaster(saveUpdater=true, numWorkers=null, rddDataSetNumExamples=16, averagingFrequency=5, aggregationDepth=2, prefetchNumBatches=0, iterationCount=0, trainingHookList=null)\nsparkNet: org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer = org.deeplearning4j.spark.impl.multilayer.SparkDl4jMultiLayer@5968d9fb\n"}]},"apps":[],"jobName":"paragraph_1567056431533_-2132925003","id":"20190819-011525_331240530","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:40:03+0000","dateFinished":"2019-08-29T05:40:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6626"},{"text":"val numEpochs = 2\nfor (i <- 0 to numEpochs) {\n  val trained = sparkNet.fit(trainData)\n}","user":"anonymous","dateUpdated":"2019-08-29T05:39:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numEpochs: Int = 2\n"}]},"apps":[],"jobName":"paragraph_1567056431534_-2131770757","id":"20190813-015330_1330142053","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:40:06+0000","dateFinished":"2019-08-29T05:53:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6627"},{"text":"val resultado = sparkNet.doEvaluation(testData, 64, new Evaluation(10))(0)","user":"anonymous","dateUpdated":"2019-08-29T05:39:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"resultado: org.deeplearning4j.eval.Evaluation =\n\nExamples labeled as 0 classified by model as 0: 972 times\nExamples labeled as 0 classified by model as 2: 1 times\nExamples labeled as 0 classified by model as 5: 1 times\nExamples labeled as 0 classified by model as 6: 2 times\nExamples labeled as 0 classified by model as 7: 1 times\nExamples labeled as 0 classified by model as 8: 3 times\nExamples labeled as 1 classified by model as 1: 1127 times\nExamples labeled as 1 classified by model as 2: 4 times\nExamples labeled as 1 classified by model as 6: 2 times\nExamples labeled as 1 classified by model as 8: 2 times\nExamples labeled as 2 classified by model as 0: 4 times\nExamples labeled as 2 classified by model as 1: 2 times\nExamples labeled as 2 classified by model as 2: 1011 times\nExamples lab..."}]},"apps":[],"jobName":"paragraph_1567056431534_-2131770757","id":"20190813-021401_2110373941","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:40:18+0000","dateFinished":"2019-08-29T05:53:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6628"},{"text":"println(resultado)","user":"anonymous","dateUpdated":"2019-08-29T05:39:21+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nExamples labeled as 0 classified by model as 0: 972 times\nExamples labeled as 0 classified by model as 2: 1 times\nExamples labeled as 0 classified by model as 5: 1 times\nExamples labeled as 0 classified by model as 6: 2 times\nExamples labeled as 0 classified by model as 7: 1 times\nExamples labeled as 0 classified by model as 8: 3 times\nExamples labeled as 1 classified by model as 1: 1127 times\nExamples labeled as 1 classified by model as 2: 4 times\nExamples labeled as 1 classified by model as 6: 2 times\nExamples labeled as 1 classified by model as 8: 2 times\nExamples labeled as 2 classified by model as 0: 4 times\nExamples labeled as 2 classified by model as 1: 2 times\nExamples labeled as 2 classified by model as 2: 1011 times\nExamples labeled as 2 classified by model as 3: 3 times\nExamples labeled as 2 classified by model as 4: 1 times\nExamples labeled as 2 classified by model as 7: 6 times\nExamples labeled as 2 classified by model as 8: 5 times\nExamples labeled as 3 classified by model as 0: 1 times\nExamples labeled as 3 classified by model as 2: 4 times\nExamples labeled as 3 classified by model as 3: 982 times\nExamples labeled as 3 classified by model as 5: 7 times\nExamples labeled as 3 classified by model as 7: 6 times\nExamples labeled as 3 classified by model as 8: 8 times\nExamples labeled as 3 classified by model as 9: 2 times\nExamples labeled as 4 classified by model as 0: 1 times\nExamples labeled as 4 classified by model as 1: 1 times\nExamples labeled as 4 classified by model as 2: 4 times\nExamples labeled as 4 classified by model as 4: 961 times\nExamples labeled as 4 classified by model as 6: 2 times\nExamples labeled as 4 classified by model as 7: 2 times\nExamples labeled as 4 classified by model as 8: 2 times\nExamples labeled as 4 classified by model as 9: 9 times\nExamples labeled as 5 classified by model as 0: 2 times\nExamples labeled as 5 classified by model as 1: 1 times\nExamples labeled as 5 classified by model as 2: 1 times\nExamples labeled as 5 classified by model as 3: 6 times\nExamples labeled as 5 classified by model as 5: 875 times\nExamples labeled as 5 classified by model as 6: 3 times\nExamples labeled as 5 classified by model as 7: 1 times\nExamples labeled as 5 classified by model as 8: 2 times\nExamples labeled as 5 classified by model as 9: 1 times\nExamples labeled as 6 classified by model as 0: 8 times\nExamples labeled as 6 classified by model as 1: 3 times\nExamples labeled as 6 classified by model as 2: 1 times\nExamples labeled as 6 classified by model as 4: 4 times\nExamples labeled as 6 classified by model as 5: 3 times\nExamples labeled as 6 classified by model as 6: 937 times\nExamples labeled as 6 classified by model as 8: 2 times\nExamples labeled as 7 classified by model as 0: 1 times\nExamples labeled as 7 classified by model as 1: 4 times\nExamples labeled as 7 classified by model as 2: 15 times\nExamples labeled as 7 classified by model as 3: 2 times\nExamples labeled as 7 classified by model as 7: 996 times\nExamples labeled as 7 classified by model as 8: 1 times\nExamples labeled as 7 classified by model as 9: 9 times\nExamples labeled as 8 classified by model as 0: 6 times\nExamples labeled as 8 classified by model as 2: 6 times\nExamples labeled as 8 classified by model as 3: 5 times\nExamples labeled as 8 classified by model as 4: 4 times\nExamples labeled as 8 classified by model as 5: 5 times\nExamples labeled as 8 classified by model as 6: 5 times\nExamples labeled as 8 classified by model as 7: 7 times\nExamples labeled as 8 classified by model as 8: 931 times\nExamples labeled as 8 classified by model as 9: 5 times\nExamples labeled as 9 classified by model as 0: 5 times\nExamples labeled as 9 classified by model as 1: 7 times\nExamples labeled as 9 classified by model as 2: 1 times\nExamples labeled as 9 classified by model as 3: 5 times\nExamples labeled as 9 classified by model as 4: 6 times\nExamples labeled as 9 classified by model as 5: 4 times\nExamples labeled as 9 classified by model as 7: 5 times\nExamples labeled as 9 classified by model as 8: 1 times\nExamples labeled as 9 classified by model as 9: 975 times\n\n\n==========================Scores========================================\n # of classes:    10\n Accuracy:        0.9767\n Precision:       0.9767\n Recall:          0.9765\n F1 Score:        0.9766\nPrecision, recall & F1: macro-averaged (equally weighted avg. of 10 classes)\n========================================================================\n"}]},"apps":[],"jobName":"paragraph_1567056431535_-2132155506","id":"20190828-032002_1964617380","dateCreated":"2019-08-29T05:27:11+0000","dateStarted":"2019-08-29T05:53:07+0000","dateFinished":"2019-08-29T05:53:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6629"},{"user":"anonymous","dateUpdated":"2019-08-29T05:28:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1567056431535_-2132155506","id":"20190828-032119_912714771","dateCreated":"2019-08-29T05:27:11+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6630"}],"name":"LeNet - Mnist","id":"2ENYYGNPJ","angularObjects":{"2EMEK7VUM:shared_process":[],"2EPE8T2P4:shared_process":[],"2EP8J6V8B:shared_process":[],"2EJTVPNGW:shared_process":[],"2EKZ5MUY8:shared_process":[],"2EJMGXHDC:shared_process":[],"2ENESSFH2:shared_process":[],"2EMEEVCDS:shared_process":[],"2EJS3R1EF:shared_process":[],"2EJPMY3R8:shared_process":[],"2EJXTRMK5:shared_process":[],"2EK3ZXPMR:shared_process":[],"2EJRF8AP4:shared_process":[],"2ENJKD5RW:shared_process":[],"2EJWMB84A:shared_process":[],"2EKDSAUPF:shared_process":[],"2EM1EHM63:shared_process":[],"2EK3NF67M:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}